# This is a basic workflow to help you get started with Actions

name: CI-feature-branch

# Controls when the action will run.
on:
  push:
    branches: ["*", "!main", "!master", "!skip/*"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install
        run: |
          npm ci

      - name: Install itests
        working-directory: ./itest
        run: |
          for stack_dir in $(ls -d */) ; do cd ${stack_dir} && npm ci && cd .. ; done

      - name: Build
        run: |
          npm run build

      - name: Test
        run: |
          npm test

      - name: Run CLI tests
        working-directory: ./itest
        run: |
          bash clitest.sh

      - name: Account check
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.TEST_AWS_DEFAULT_REGION }}
          EXPECTED_ACCOUNT: ${{ vars.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ vars.AWS_REGION }}
        run: |
          ACTUAL_ACCOUNT=$(aws sts get-caller-identity | jq -r '.Account')
          if [[ "${ACTUAL_ACCOUNT}" != "${EXECTED_ACCOUNT}" ]]
          then
            echo "expected account ${EXPECTED_ACCOUNT}, got ${ACTUAL_ACCOUNT}"
          fi
          [[ "${ACTUAL_ACCOUNT}" == "${EXPECTED_ACCOUNT}" ]]
          echo "using AWS account ${ACTUAL_ACCOUNT}"

      - name: Run integration tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.TEST_AWS_DEFAULT_REGION }}
        working-directory: ./itest
        run: |
          bash itest.sh
